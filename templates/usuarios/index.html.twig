{% extends 'base.html.twig' %}

{% block title %}Perfil del Usuario{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link href="https://cdn.datatables.net/v/dt/jszip-3.10.1/dt-2.0.3/b-3.0.1/b-html5-3.0.1/b-print-3.0.1/sl-2.0.0/datatables.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.10.0/js/bootstrap-datepicker.min.js">
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
{% endblock %}

{% block body %}
<div class="container mt-3">
    <h1 class="text-center">Perfil del Usuario</h1>
    <div class="card">
        <div class="card-body">
            <p><strong>ID:</strong> {{ usuario.id }}</p>
            <p><strong>Nombre:</strong> {{ usuario.nombre }}</p>
            <p><strong>Email:</strong> {{ usuario.email }}</p>
            <p><strong>Estado:</strong> {{ usuario.isActive ? 'Activo' : 'Inactivo' }}</p>
            <p><strong>Verificado:</strong> {{ usuario.isVerified ? 'Sí' : 'No' }}</p>
            <p><strong>Autorizaciones:</strong>
            {% set readableRoles = [] %}
            {% for role in usuario.getRoles() %}
                {% if role == 'ROLE_USER' %}
                    {% set readableRoles = readableRoles | merge(['NIVEL USUARIO']) %}
                {% elseif role == 'ROLE_ADMIN' %}
                    {% set readableRoles = readableRoles | merge(['NIVEL ADMINISTRADOR']) %}
                {% endif %}
            {% endfor %}
            {{ readableRoles | join(' Y ') }}
        </p>

            <a href="{{ path('app_usuarios_edit', {'id': usuario.id}) }}" class="btn btn-warning">Editar Perfil</a>
            <button type="button" class="btn btn-danger mx-3" data-bs-toggle="modal" data-bs-target="#deleteModal">
                Borrar Cuenta
            </button>


        </div>
    </div>
</div>

            {# modal de mensajes #}
        <div class="modal-body">
            {% include '/usuarios/modalUsuarios.html.twig' %}
        </div>
{% endblock %}

{% block javascripts %}

    <script>
        $(document).ready(function() {
            // Verificar si hay datos en la tabla
            var tableData = {% if usuarios is defined %} {{ usuarios|length > 0 ? usuarios|json_encode : 'null' }} {% else %} null {% endif %};
            // Si hay datos, inicializar la tabla DataTables
            if (tableData !== null) {    
                var table = $('#usuariosTabla').DataTable({  
                    dom: '<"toolbar">Bfrtip',
                    language: {
                        "decimal": "",
                        "emptyTable": "No hay información",
                        "info": "Mostrando _START_ a _END_ de _TOTAL_ Entradas",
                        "infoEmpty": "Mostrando 0 to 0 of 0 Entradas",
                        "infoFiltered": "(Filtrado de _MAX_ total entradas)",
                        "infoPostFix": "",
                        "thousands": ",",
                        "lengthMenu": "Mostrar _MENU_ Entradas",
                        "loadingRecords": "Cargando...",
                        "processing": "Procesando...",
                        "search": "Buscar:",
                        "zeroRecords": "Sin resultados encontrados",
                    },
                    buttons: [
                        {
                            extend: 'excel',
                            text: '<i class="fas fa-file-excel"></i>',
                            titleAttr: 'Exportar a Excel',
                            className: 'btn-excel',
                            exportOptions: {
                        columns: [1, 2, 3, 4]
                    },
                        },
                        {
                            extend: 'pdf',
                            text: '<i class="fas fa-file-pdf"></i>',
                            titleAttr: 'Exportar a PDF',
                            className: 'btn-pdf',
                            exportOptions: {
                        columns: [1, 2, 3, 4]
                    },customize: function(doc) {
                    
                        var docContent = doc.content[1];
                        docContent.margin = [ 0, 0, 0, 0 ]; // [left, top, right, bottom]
                        docContent.table.widths = Array(docContent.table.body[0].length + 1).join('*').split('');
                        // En ese apartado se puede ajustar para cambiar la posición de la tabla horizontalmente
                        docContent.layout = {
                            hLineWidth: function(i, node) {
                                return 0.5;
                            },
                            vLineWidth: function(i, node) {
                                return 0.5;
                            },
                            hLineColor: function(i, node) {
                                return '#aaa';
                            },
                            vLineColor: function(i, node) {
                                return '#aaa';
                            },
                            paddingLeft: function(i, node) {
                                return 4;
                            },
                            paddingRight: function(i, node) {
                                return 4;
                            },
                            paddingTop: function(i, node) {
                                return 2;
                            },
                            paddingBottom: function(i, node) {
                                return 2;
                            }
                        };
                    },
                        },
                        {
                            extend: 'print',
                            text: '<i class="fas fa-print"></i>',
                            titleAttr: 'Imprimir',
                            className: 'btn-print',
                            exportOptions: {
                        columns: [1, 2, 3, 4]
                    },
                        }
                    ],
                    select: {
                        style: 'multi',
                        selector: 'td:first-child'
                    },
                    order: [[1, 'asc']], // Ordena la tabla por la segunda columna
                    initComplete: function () {
                        $('.dt-buttons').wrapAll('<div class="d-flex justify-content-end"></div>');
                    }
                });
            }else{            
                // Si no hay datos, mostrar un mensaje indicando que no hay información
                $('#usuariosTabla').html('<tr><td colspan="6">No hay información disponible</td></tr>');}

                // Agrega el botón de filtrar usando los botones de extensión
                new $.fn.dataTable.Buttons(table, {
                    buttons: [
                        {
                            extend: 'colvis',
                            text: '<i class="fas fa-filter"></i> Filtrar', // Texto del botón
                            className: 'btn-filter',
                        }
                    ]
                }).container().appendTo($('#toolbar'));

                // Inicializar los botones de extensión
                table.buttons().container().appendTo($('#toolbar'));

                // Agregar evento para mostrar el desplegable al hacer clic en el botón de filtrar
                $('#toolbar').on('click', '.btn-filter', function () {
                    $(this).next().toggleClass('show');
                });

                // Agregar evento para mostrar la marca de verificación al seleccionar una columna
                $('#toolbar').on('change', 'input[type="checkbox"].dt-checkbox', function() {
                    var index = $(this).val();
                    var checked = $(this).prop('checked');
                    table.column(index).visible(checked);
                    updateCheckboxesVisibility(); // Llama a la función para actualizar la visibilidad de los checkboxes
                });

                // Función para actualizar la visibilidad de los checkboxes
                function updateCheckboxesVisibility() {
                    $('#toolbar input[type="checkbox"].dt-checkbox').each(function() {
                        var column = table.column($(this).val());
                        $(this).prop('checked', column.visible()); // Marcar o desmarcar el checkbox según la visibilidad de la columna
                    });
                }

                // Cerrar el desplegable al hacer clic fuera de él
            $(document).on('click', function (e) {
                if (!$(e.target).closest('.btn-filter, .dt-dropdown').length) {
                    $('.show').removeClass('show');
                }
            });

        <script>
            document.addEventListener('DOMContentLoaded', function () {
                const deleteButton = document.getElementById('confirmDeleteButton');
                deleteButton.addEventListener('click', function () {
                    fetch('{{ path('app_usuarios_delete', {'id': usuario.id}) }}', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/x-www-form-urlencoded',
                        },
                        body: '_token={{ csrf_token('delete' ~ usuario.id) }}'
                    })
                    .then(response => response.json())
                    .then(data => {
                        $('#deleteModal').modal('hide');
                        if (data.success) {
                            $('#successModalText').text('El usuario ha sido eliminado.');
                            $('#successModal').modal('show');
                        } else {
                            $('#errorModalText').text('Error al eliminar el usuario.');
                            $('#errorModal').modal('show');
                        }
                    })
                    .catch(error => {
                        $('#deleteModal').modal('hide');
                        $('#errorModalText').text('Error al eliminar el usuario.');
                        $('#errorModal').modal('show');
                    });
                });
            });
        </script>


{% endblock %}

