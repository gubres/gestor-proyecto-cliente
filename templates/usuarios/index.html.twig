{% extends 'base.html.twig' %}

{% block title %}Usuarios index{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <!--Esto es para el datatable de botones y selección múltiple con boostrap-->
    <link href="https://cdn.datatables.net/v/dt/jszip-3.10.1/dt-2.0.3/b-3.0.1/b-html5-3.0.1/b-print-3.0.1/sl-2.0.0/datatables.min.css" rel="stylesheet">
{% endblock %}

{% block body %}
    <h1>Usuarios</h1>
    <table class="table" id="usuariosTabla">
        <thead>
            <tr>
                <th><input type="checkbox" id="seleccionarTodo"></th>
                <th>Id</th>
                <th>Email</th>
                <th>Estado</th>
                <th>Roles</th>
                <th>Password</th>
                <th>IsVerified</th>
                <th>actions</th>
            </tr>
        </thead>
        <tbody>
            {% for usuario in usuarios %}
            <tr>
                <td><input type="checkbox" class="seleccionarUsuario" name="usuarios_seleccionados[]" value="{{ usuario.id }}"></td>
                <td>{{ usuario.id }}</td>
                <td>{{ usuario.email }}</td>
                 {% if usuario.isActive %}
                        {% if 'ROLE_USER' in usuario.roles %}
                            ROLE_USER
                        {% else %}
                            {{ usuario.roles ? usuario.roles|json_encode : '' }}
                        {% endif %}
                    {% else %}
                        -
                    {% endif %}
                </td>
                <td>{{ usuario.isActive ? 'Activo' : 'Inactivo' }}</td>
                <td><td>{{ usuario.password }}</td>
                <td>{{ usuario.isVerified ? 'Yes' : 'No' }}</td>
                <td>
                    <a href="{{ path('app_usuarios_show', {'id': usuario.id}) }}" class="btn btn-info">Detalles</a>
                    <a href="{{ path('app_usuarios_edit', {'id': usuario.id}) }}" class="btn btn-warning">Editar</a>
                </td>
            </tr>
            {% else %}
            <tr>
                <td colspan="6">no records found</td>
            </tr>
            {% endfor %}
        </tbody>
    </table>

 <div style="margin-bottom: 10px;">
    <a href="{{ path('app_usuarios_new') }}" class="btn btn-primary">Crear Nuevo</a>

    <!-- Nuevo formulario para eliminar registros -->
    <form action="/eliminar-registros" method="post" id="formEliminarRegistros" style="display: inline-block;">
        <!-- Campos ocultos para los IDs de los registros -->
        <input type="hidden" name="id" id="idToDelete" value="">

        
        <!-- Botón para eliminar registros -->
        <button type="submit" class="btn btn-danger" id="eliminarSeleccionButton" style="display: none;">Eliminar selección</button>
    </form>
</div>

<!-- Divs para mostrar mensajes de éxito y error -->
<div id="successMessage" class="alert alert-success d-none" role="alert"></div>
<div id="errorMessage" class="alert alert-danger d-none" role="alert"></div>


{% endblock %}

{% block javascripts %}
    {{ parent() }}

    <!--Esto es para el datatable de botones y selección múltiple con boostrap-->
    <script src="https://cdn.datatables.net/v/dt/jszip-3.10.1/dt-2.0.3/b-3.0.1/b-html5-3.0.1/b-print-3.0.1/sl-2.0.0/datatables.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/vfs_fonts.js"></script>
    <script>
        $(document).ready(function() {
            const table = $('#usuariosTabla').DataTable({  
                dom: 'Bfrtip',
                buttons: [
                    {
                        extend: 'excel',
                        text: '<i class="fas fa-file-excel"></i> Exportar Excel',
                        titleAttr: 'Exportar a Excel',
                    },
                    {
                        extend: 'pdf',
                        text: '<i class="fas fa-file-pdf"></i> Exportar PDF',
                        titleAttr: 'Exportar a PDF',
                    },
                    {
                        extend: 'print',
                        text: '<i class="fas fa-print"></i> Imprimir',
                        titleAttr: 'Imprimir',
                    }
                ],
                select: {
                    style: 'multi'
                },
                order: [[1, 'asc']] // Ordena la tabla por la segunda columna
            });

           // Función para actualizar la visibilidad del botón de eliminar selección
        function updateDeleteButtonVisibility() {
            var deleteButton = $('#eliminarSeleccionButton');
            var checkedCount = $('.seleccionarUsuario:checked').length;
            if (checkedCount > 0) {
               deleteButton.show(); // Mostrar el botón si hay alguna selección
            } else {
                deleteButton.hide(); // Ocultar el botón si no hay ninguna selección
            }
        }
        $('#seleccionarTodo').on('click', function() {
            var isChecked = $(this).prop('checked');
            $('.seleccionarUsuario').prop('checked', isChecked);
            updateDeleteButtonVisibility(); // Llama a la función para actualizar la visibilidad del botón de eliminar selección
        });

        $('.seleccionarUsuario').on('click', function() {
            updateDeleteButtonVisibility(); // Llama a la función para actualizar la visibilidad del botón de eliminar selección
        });
        
        // Agregar evento click al botón para eliminar filas seleccionadas
        $('#eliminarSeleccionButton').on('click', function () {
            table.rows('.selected').remove().draw(false);
        });

         // Llamar a la función obtenerIDsSeleccionados en el evento submit del formulario
           $('#formEliminarRegistros').submit(function (event) {
               event.preventDefault(); // Evita el envío del formulario por defecto

               // Obtener los IDs seleccionados
               var idsSeleccionados = obtenerIDsSeleccionados();

               // Asignar los IDs al campo oculto 'idToDelete'
               $('#idToDelete').val(idsSeleccionados);

               // Realizar la solicitud AJAX
               $.ajax({
                   type: 'POST',
                   url: $(this).attr('action'),
                   data: $(this).serialize(),
                   success: function(response) {
                       if (response.trim() === 'Registros eliminados correctamente') {
                           $('#successMessage').removeClass('d-none').text(response);
                           
                           // Después de mostrar el mensaje de éxito, redirige a la página de índice de usuarios
                            window.location.href = "{{ path('app_usuarios_index') }}";
                       } else {
                           $('#errorMessage').removeClass('d-none').text('Ha ocurrido un error al eliminar los registros.');
                       }
                   },
                   error: function() {
                       $('#errorMessage').removeClass('d-none').text('Ha ocurrido un error al eliminar los registros.');
                   }
               });
           });


        // Definir la función obtenerIDsSeleccionados
        function obtenerIDsSeleccionados() {
            var ids = [];
            $('.seleccionarUsuario:checked').each(function() {
                ids.push($(this).val());
            });
            return ids;
        }

    });

</script>
{% endblock %}
