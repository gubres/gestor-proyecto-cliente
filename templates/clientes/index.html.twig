{% extends 'base.html.twig' %}

{% block title %}Clientes index{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <!-- Estilos para la ventana modal -->
    <style>
        /* Estilos para la ventana modal */
        .modal-table {
            width: 100%;
            border-collapse: collapse;
        }
        .modal-table th,
        .modal-table td {
            border: 1px solid #ddd;
            padding: 8px;
        }
        .modal-table th {
            background-color: #f2f2f2;
            text-align: left;
        }
    </style>

    <style>
    /* Estilos para los botones pdf,excel y print */
    .dt-button {
        color: white !important;
        border-color: transparent !important;
        border-radius: 5px !important;
        margin-right: 5px;
    }
   .toolbar .btn-group > .btn {
        margin-right: 0 !important;
    }

    .dt-button:hover {
        opacity: 0.8;
    }

    /* Eliminar los márgenes entre los botones */
    .dt-buttons .btn {
        margin-right: 0 !important;
    }

    /* Estilo personalizado para el botón de Excel */
    .btn-excel {
        background-color: green !important; /* Cambiar el color de fondo a verde oscuro */
        color: white !important; /* Cambiar el color del texto a blanco */
    }

    /* Estilo personalizado para el botón de PDF */
    .btn-pdf {
        background-color: purple !important; /* Cambiar el color de fondo a morado */
        color: white !important; /* Cambiar el color del texto a blanco */
    }

    /* Estilo personalizado para el botón de impresión */
    .btn-print {
        background-color: lightblue !important; /* Cambiar el color de fondo a azul claro */
        color: white !important; /* Cambiar el color del texto a blanco */
    }
    /* Estilo personalizado para los botones de PDF, Excel y Print */
    .btn-pdf,
    .btn-excel,
    .btn-print {
        margin-right: 0 !important;
    }
</style>
{% endblock %}

{% block body %}
     <div class="container">
        <h1>Clientes</h1>
        <div class="row">
            <div class="col-md-6">
                <a href="{{ path('app_clientes_new') }}" class="btn btn-primary">Crear Nuevo</a>
            </div>
        </div>
    <table class="table" id="clientesTabla">
        <thead>
            <tr>
                <th><input type="checkbox" id="seleccionarTodo"></th>
                <th>Id</th>
                <th>Nombre</th>
                <th>Telefono</th>
                <th>Email</th>
                <th>Proyectos</th>
                <th>actions</th>
            </tr>
        </thead>
        <tbody>
        {% for cliente in clientes %}
            <tr>
                <td><input type="checkbox" class="seleccionarCliente" name="clientes_seleccionados[]" value="{{ cliente.id }}"></td>
                <td>{{ cliente.id }}</td>
                <td>{{ cliente.nombre }}</td>
                <td>{{ cliente.telefono }}</td>
                <td>{{ cliente.email }}</td>
                <td>
                    {% for proyecto in cliente.proyectos %}
                        <li>{{ proyecto.nombre }}</li>
                    {% endfor %}
                    </td>
                <td>
                    <a href="{{ path('app_clientes_show', {'id': cliente.id}) }}" class="btn btn-info ">Detalles</a>
                    <a href="{{ path('app_clientes_edit', {'id': cliente.id}) }}" class="btn btn-warning ">Editar</a>
                </td>
            </tr>
        {% else %}
            <tr>
                <td colspan="5">no records found</td>
            </tr>
        {% endfor %}
        </tbody>
    </table>
    </div>

        <!-- Nuevo formulario para eliminar clientes -->
        <form action="/eliminar-clientes" method="post" id="formEliminarClientes" style="display: inline-block;">
            <!-- Campos ocultos para los IDs de los clientes -->
            <input type="hidden" name="id" id="idToDelete" value="">
            
            <!-- Botón para eliminar clientes -->
            <button type="submit" class="btn btn-danger" id="eliminarSeleccionButton" style="display: none;">Eliminar selección</button>
        </form>

    <!-- Divs para mostrar mensajes de éxito y error -->
    <div id="successMessage" class="alert alert-success d-none" role="alert"></div>
    <div id="errorMessage" class="alert alert-danger d-none" role="alert"></div>

{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <!--Esto es para el datatable de botones y selección múltiple con boostrap-->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/vfs_fonts.js"></script>
    <script src="https://cdn.datatables.net/v/dt/jszip-3.10.1/dt-2.0.4/b-3.0.2/b-colvis-3.0.2/b-html5-3.0.2/b-print-3.0.2/rr-1.5.0/sb-1.7.1/sp-2.3.1/sl-2.0.1/datatables.min.js"></script>
    <script src="https://code.highcharts.com/highcharts.js"></script>
    <script>
        $(document).ready(function() {
            var table = $('#clientesTabla').DataTable({  
                dom: '<"toolbar">Bfrtip',
                buttons: [
                    {
                        extend: 'excel',
                        text: '<i class="fas fa-file-excel"></i>',
                        titleAttr: 'Exportar a Excel',
                        className: 'btn-excel'
                    },
                    {
                        extend: 'pdf',
                        text: '<i class="fas fa-file-pdf"></i>',
                        titleAttr: 'Exportar a PDF',
                        className: 'btn-pdf'
                    },
                    {
                        extend: 'print',
                        text: '<i class="fas fa-print"></i>',
                        titleAttr: 'Imprimir',
                        className: 'btn-print'
                    }
                ],
                select: {
                    style: 'multi',
                    selector: 'td:first-child'
                },
                order: [[1, 'asc']], // Ordena la tabla por la segunda columna
                searching: true, // Habilita la funcionalidad de búsqueda
                // Personaliza la configuración de búsqueda (opcional)
                search: {
                    caseInsensitive: true, // Búsqueda insensible a mayúsculas y minúsculas
                    regex: true, // Búsqueda con expresiones regulares
                    smart: true // Búsqueda inteligente
                    // Puedes agregar más opciones de búsqueda según tus necesidades
                },
                initComplete: function () {
                    $('.dt-buttons').wrapAll('<div class="d-flex justify-content-end"></div>');
                }
            });

            // Agregar un contenedor para los botones en la parte superior izquierda
            $("div.toolbar").html('<div class="btn-group" style="float:left;">' + 
                
                '<button type="button" class="btn btn-danger" id="eliminarSeleccionButton" style="display: none;">Eliminar Selección</button>' +
                '</div>');
            // Función para actualizar la visibilidad del botón de eliminar selección
            function updateDeleteButtonVisibility() {
                var deleteButton = $('#eliminarSeleccionButton');
                var checkedCount = $('.seleccionarCliente:checked').length;
                if (checkedCount > 0) {
                    deleteButton.show(); // Mostrar el botón si hay alguna selección
                } else {
                    deleteButton.hide(); // Ocultar el botón si no hay ninguna selección
                }
            }

            $('#seleccionarTodo').on('click', function() {
                var isChecked = $(this).prop('checked');
                $('.seleccionarCliente').prop('checked', isChecked);
                updateDeleteButtonVisibility(); // Llama a la función para actualizar la visibilidad del botón de eliminar selección
            });

            $('.seleccionarCliente').on('click', function() {
                updateDeleteButtonVisibility(); // Llama a la función para actualizar la visibilidad del botón de eliminar selección
            });

            // Agregar evento click al botón para eliminar filas seleccionadas
            $('#eliminarSeleccionButton').on('click', function () {
                table.rows('.selected').remove().draw(false);
            });

            // Llamar a la función obtenerIDsSeleccionados en el evento submit del formulario
            $('#formEliminarClientes').submit(function (event) {
                event.preventDefault(); // Evita el envío del formulario por defecto

                // Obtener los IDs seleccionados
                var idsSeleccionados = obtenerIDsSeleccionados();

                // Asignar los IDs al campo oculto 'idToDelete'
                $('#idToDelete').val(idsSeleccionados);

                // Realizar la solicitud AJAX
                $.ajax({
                    type: 'POST',
                    url: $(this).attr('action'),
                    data: $(this).serialize(),
                    success: function(response) {
                        if (response.trim() === 'Clientes eliminados correctamente') {
                            $('#successMessage').removeClass('d-none').text(response);
                           
                            // Después de mostrar el mensaje de éxito, redirige a la página de índice de clientes
                            window.location.href = "{{ path('app_clientes_index') }}";
                        } else {
                            $('#errorMessage').removeClass('d-none').text('Ha ocurrido un error al eliminar los clientes.');
                        }
                    },
                    error: function() {
                        $('#errorMessage').removeClass('d-none').text('Ha ocurrido un error al eliminar los clientes.');
                    }
                });
            });

            // Definir la función obtenerIDsSeleccionados
            function obtenerIDsSeleccionados() {
                var ids = [];
                $('.seleccionarCliente:checked').each(function() {
                    ids.push($(this).val());
                });
                return ids;
            }

            // Inicialización de Highcharts
            console.log("Datos de clientes:", {{ clientesTabla | json_encode }}); // Agregamos esta línea para verificar los datos de clientes
            Highcharts.chart('chartContainer', {
                chart: {
                    type: 'column'
                },
                title: {
                    text: 'Clientes'
                },
                xAxis: {
                    type: 'category',
                    labels: {
                        rotation: -45,
                        style: {
                            fontSize: '13px',
                            fontFamily: 'Verdana, sans-serif'
                        }
                    }
                },
                yAxis: {
                    min: 0,
                    title: {
                        text: 'Total'
                    }
                },
                legend: {
                    enabled: false
                },
                tooltip: {
                    pointFormat: 'Total: <b>{point.y}</b>'
                },
                series: [{
                    name: 'Clientes',
                    data: {{ clientesTabla | json_encode }}
                }]
            });
        });
    </script>
{% endblock %}
