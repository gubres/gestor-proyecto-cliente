{% extends 'base.html.twig' %}

{% block title %}Proyectos index{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    
     <link href="https://cdn.datatables.net/v/dt/jszip-3.10.1/dt-2.0.3/b-3.0.1/b-html5-3.0.1/b-print-3.0.1/sl-2.0.0/datatables.min.css" rel="stylesheet">
    <!-- Biblioteca para la fecha de creación -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.10.0/js/bootstrap-datepicker.min.js">
    <!-- Biblioteca de Jquery UI -->
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css"> <!-- Estilos para la ventana modal -->
  
{% endblock %}

{% block body %}
    <div class="container">
        <h1>Clientes</h1>
        <div class="row">
            <div class="col-md-6">
                <a href="{{ path('app_proyectos_new') }}" class="btn btn-primary">Crear Nuevo</a>
                <!-- Nuevo formulario para eliminar registros -->
                <form action="{{ path("eliminar_proyectos") }}" method="post" id="formEliminarRegistros" style="display: inline-block;">                    
                    <!-- Botón para eliminar registros -->
                    <button type="submit" class="btn btn-danger" id="eliminarSeleccionButton" style="display: none;">Eliminar selección</button>
                </form>
                <!-- Desplegable de filtrado -->
                    <div class="dropdown">
                        <button class="btn btn-secondary dropdown-toggle btn-filter" type="button" id="dropdownFilterButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            <i class="fas fa-filter"></i> Filtrar
                        </button>

                        <div class="dropdown-menu" aria-labelledby="dropdownFilterButton">
                            <!-- Aquí-->

                            <div class="dropdown-item">
                                <button class="btn btn-warning" id="limpiarFiltros">Borrar filtros</button>
                            </div>
                    </div>
            </div>
        </div>

    <div id="toolbar"></div> <!-- Contenedor para los botones -->

    <table class="table" id="proyectosTabla">
        <thead>
            <tr>
                <th><input type="checkbox" id="seleccionarTodo"></th>
                <th>Id</th>
                <th>Nombre</th>
                <th>Cliente</th>
                <th>Usuarios Asignados</th>
                <th>Estado</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            {% for proyecto in proyectos %}
            <tr>
                <td><input type="checkbox" class="seleccionarProyecto" name="proyectos_seleccionados[]" value="{{ proyecto.id }}"></td>
                <td>{{ proyecto.id }}</td>
                <td>{{ proyecto.nombre }}</td>
                <td>
                    {% if proyecto.cliente is null %}
                        Cliente eliminado
                    {% else %}
                        {{ proyecto.cliente.nombre }}
                    {% endif %}
                </td>
                <td>
                    {% for usuarioProyecto in proyecto.usuariosProyectos %}
                        {% if usuarioProyecto.estado %}
                            {{ usuarioProyecto.usuario.nombre }}
                            {% if not loop.last %}, {% endif %}
                        {% endif %}
                    {% endfor %}
                </td>
                <td>{{ proyecto.estado }}</td>
                <td>
                    <!-- Botón para abrir el modal de detalles -->
                    <button type="button" class="btn btn-info" data-bs-toggle="modal" data-bs-target="#detallesModal{{ proyecto.id }}">Detalles</button>
                    <a href="{{ path('app_proyectos_edit', {'id': proyecto.id}) }}" class="btn btn-warning">Editar</a>
                </td>
            </tr>
            {% else %}
            <tr>
                <td colspan="7">no records found</td>
            </tr>
            {% endfor %}
        </tbody>
    </table>
    </div>
    

    <!-- Divs para mostrar mensajes de éxito y error -->
    <div id="successMessage" class="alert alert-success d-none" role="alert"></div>
    <div id="errorMessage" class="alert alert-danger d-none" role="alert"></div>

    <!-- Modal de detalles -->
    {% for proyecto in proyectos %}
    <div class="modal fade" id="detallesModal{{ proyecto.id }}" tabindex="-1" aria-labelledby="detallesModalLabel{{ proyecto.id }}" aria-hidden="true">
        <div class="modal-dialog modal-lg"> <!-- modal-lg para hacer el modal más grande -->
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="detallesModalLabel{{ proyecto.id }}">Detalles del Proyecto</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <table class="modal-table">
                        <tbody>
                            <tr>
                                <th>Id</th>
                                <td>{{ proyecto.id }}</td>
                            </tr>
                            <tr>
                                <th>Nombre</th>
                                <td>{{ proyecto.nombre }}</td>
                            </tr>
                            <tr>
                                <th>Cliente</th>
                                <td>
                                {% if proyecto.cliente is null %}
                                    Cliente eliminado
                                {% else %}
                                    {{ proyecto.cliente.nombre }}
                                {% endif %}
                            </td>
                            </tr>
                            <tr>
                                <th>Usuarios Asignados</th>
                            <td>
                                {% for usuarioProyecto in proyecto.usuariosProyectos %}
                                    {% if usuarioProyecto.estado %}
                                        {{ usuarioProyecto.usuario.nombre }}
                                        {% if not loop.last %}, {% endif %}
                                    {% endif %}
                                {% endfor %}
                            </td>
                            </tr>
                            <tr>
                                <th>Estado</th>
                                <td>{{ proyecto.estado }}</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-arrow-left"></i>
                    </button>
                </div>
            </div>
        </div>
    </div>
    {% endfor %}

                {# modal de mensajes #}
        <div class="modal-body">
            {% include '/proyectos/modalProyectos.html.twig' %}
        </div>
</div>

{% endblock %}

{% block javascripts %}
    {{ parent() }}
   
   <!-- JavaScript de jQuery y jQuery UI -->
   
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <!-- Estilos y scripts para DataTables con botones y selección múltiple -->
    <script src="https://cdn.datatables.net/v/dt/jszip-3.10.1/dt-2.0.3/b-3.0.1/b-html5-3.0.1/b-print-3.0.1/sl-2.0.0/datatables.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/vfs_fonts.js"></script>
    <!-- Agrega el script de DataTables Buttons -->
    
    <script src="https://cdn.datatables.net/buttons/2.0.0/js/buttons.colVis.min.js"></script>
   
    <script>
        $(document).ready(function() {
        // Inicialización de DataTable
        var table = $('#proyectosTabla').DataTable({  
        dom: '<"toolbar">Bfrtip',
        language: {
            "decimal": "",
            "emptyTable": "No hay información",
            "info": "Mostrando _START_ a _END_ de _TOTAL_ Entradas",
            "infoEmpty": "Mostrando 0 a 0 de 0 Entradas",
            "infoFiltered": "(Filtrado de _MAX_ total entradas)",
            "infoPostFix": "",
            "thousands": ",",
            "lengthMenu": "Mostrar _MENU_ Entradas",
            "loadingRecords": "Cargando...",
            "processing": "Procesando...",
            "search": "Buscar:",
            "zeroRecords": "Sin resultados encontrados",
        },buttons: [
                    {
                        extend: 'excel',
                        text: '<i class="fas fa-file-excel"></i>',
                        titleAttr: 'Exportar a Excel',
                        className: 'btn-excel',
                          exportOptions: {
                    columns: [1, 2, 3, 4, 5]
                },
                    },
                    {
                        extend: 'pdf',
                        text: '<i class="fas fa-file-pdf"></i>',
                        titleAttr: 'Exportar a PDF',
                        className: 'btn-pdf',
                          exportOptions: {
                    columns: [1, 2, 3, 4, 5]
                },customize: function(doc) {
                    // Centrar la tabla en la página PDF
                    var docContent = doc.content[1];
                    docContent.margin = [ 0, 0, 0, 0 ]; // [left, top, right, bottom]
                    docContent.table.widths = Array(docContent.table.body[0].length + 1).join('*').split('');
                    // En ese apartado se puede ajustar para cambiar la posición de la tabla horizontalmente
                    docContent.layout = {
                        hLineWidth: function(i, node) {
                            return 0.5;
                        },
                        vLineWidth: function(i, node) {
                            return 0.5;
                        },
                        hLineColor: function(i, node) {
                            return '#aaa';
                        },
                        vLineColor: function(i, node) {
                            return '#aaa';
                        },
                        paddingLeft: function(i, node) {
                            return 4;
                        },
                        paddingRight: function(i, node) {
                            return 4;
                        },
                        paddingTop: function(i, node) {
                            return 2;
                        },
                        paddingBottom: function(i, node) {
                            return 2;
                        }
                    };
                }
                    },
                    {
                        extend: 'print',
                        text: '<i class="fas fa-print"></i>',
                        titleAttr: 'Imprimir',
                        className: 'btn-print',
                          exportOptions: {
                    columns: [1, 2, 3, 4, 5]
                },
                    }
                ],
                select: {
                    style: 'multi',
                    selector: 'td:first-child'
                },
                order: [[1, 'asc']], // Ordena la tabla por la segunda columna
                initComplete: function () {
                    $('.dt-buttons').wrapAll('<div class="d-flex justify-content-end"></div>');
                }
    });

 // Script para limpiar la selección de tareas
            $('#limpiarSeleccionButton').on('click', function() {
                $('.seleccionarTarea').prop('checked', false);
            });

            // Agrega el evento de clic al botón de filtrar
            $('#dropdownFilterButton').on('click', function () {
                $(this).next().toggleClass('show');
            });

            // Agregar evento para mostrar el desplegable de filtrado al hacer clic en el botón de filtrar
            $('#toolbar').on('click', '.btn-filter', function () {
                var columnIndex = $(this).data('column-index'); // Obtener el índice de la columna
                var filtro = $(this).text(); // Obtener el texto de la opción del filtro

                console.log("Columna index:", columnIndex);
                console.log("Filtro:", filtro);

                // Aplicar el filtro a la columna correspondiente
                if (table) {
                    table.column(columnIndex).search(filtro).draw();
                }
            });

            // Inicializar el datepicker
            $('#datepicker').datepicker({
                dateFormat: 'yy-mm-dd', // Formato de la fecha
                autoclose: true // Cerrar automáticamente después de seleccionar una fecha
            });

            // Agregar evento clic al botón "Buscar"
            $('#buscarFecha').on('click', function() {
                var tipoFiltro = $('#filtroFecha').val(); // Obtener el tipo de filtro seleccionado
                var fechaSeleccionada = $('#datepicker').val(); // Obtener la fecha seleccionada

                if (tipoFiltro === 'desde') {
                    // Obtener la fecha seleccionada del Datepicker
                var fechaSeleccionada = $('#datepicker').datepicker('getDate');

                // Formatear la fecha seleccionada al formato adecuado (YYYY-MM-DD)
                var fechaFormateadaString = $.datepicker.formatDate('yy-mm-dd', fechaSeleccionada);

                    // Imprimir la fecha formateada en la consola para verificar
                    console.log("Fecha formateada:", fechaFormateadaString);

                    // Filtrar las tareas a partir de la fecha seleccionada
                    if (table) {
                        table.column(4).search('>=' + fechaFormateadaString).draw(); // El número 4 representa el índice de la columna de "Fecha de creación" en la tabla
                    }
                } else if (tipoFiltro === 'exacto') {
                    // Filtrar las tareas exactamente para el día seleccionado
                    if (table) {
                        table.column(4).search(fechaSeleccionada).draw(); // El número 4 representa el índice de la columna de "Fecha de creación" en la tabla
                    }
                }
            });
            // Agregar evento de cambio al desplegable de "Prioridad"
            $('#filtroPrioridad').on('change', function() {
                var prioridadSeleccionada = $(this).val(); // Obtener la prioridad seleccionada

                // Aplicar el filtro de prioridad seleccionada
                if (table) {
                    table.column(5).search(prioridadSeleccionada).draw(); // El número 5 representa el índice de la columna de "Prioridad" en la tabla
                }
            });

            // Agregar evento de cambio al desplegable de "Finalizada"
            $('#filtroFinalizada').on('change', function() {
                var finalizadaSeleccionada = $(this).val(); // Obtener la opción de "Finalizada" seleccionada

                // Aplicar el filtro de "Finalizada" seleccionada
                if (table) {
                    table.column(3).search(finalizadaSeleccionada).draw(); // El número 3 representa el índice de la columna de "Finalizada" en la tabla
                }
            });
            // Agregar evento clic al botón "Borrar filtros"
            $('#limpiarFiltros').on('click', function() {
                // Limpiar todos los filtros y mostrar todas las tareas
                if (table) {
                    table.search('').columns().search('').draw();
                }
            });
            // Agregar evento clic a los elementos del menú desplegable de filtrado
            $('.filter-option').on('click', function() {
                var columnIndex = $(this).data('column-index'); // Obtener el índice de la columna
                var filtro = $(this).data('filter-value'); // Obtener el valor del filtro

                // Aplicar el filtro a la columna correspondiente
                if (table) {
                    table.column(columnIndex).search(filtro).draw();
                }

                // Cerrar el menú desplegable después de aplicar el filtro
                $('.dropdown-menu').removeClass('show');
            });

            // Ocultar todas las ventanas modales al principio
            $('.modal').modal('hide');

            // Mostrar ventana modal al hacer clic en el botón de detalles
            $('.abrirModal').on('click', function() {
                var modalId = $(this).data('target');
                $(modalId).modal('show');
            });
            
    // Evento para mostrar el modal de confirmación de eliminación
    $('#eliminarSeleccionButton').on('click', function(e) {
        e.preventDefault(); // Evita que el formulario se envíe automáticamente
        var proyectosSeleccionados = $('.seleccionarProyecto:checked').map(function() {
            return this.value; // Recoge los IDs seleccionados
        }).get();

        if (proyectosSeleccionados.length > 0) {
            $('#deleteModal').modal('show'); // Muestra el modal de confirmación
        } else {
            alert('No se ha seleccionado ningún proyecto para eliminar.');
        }
    });

    // Evento para confirmar la eliminación desde el modal
    $('#confirmDeleteButton').on('click', function() {
        var proyectosSeleccionados = $('.seleccionarProyecto:checked').map(function() {
            return this.value;
        }).get();

        $.ajax({
            type: 'POST',
            url: '{{ path("eliminar_proyectos") }}',
            data: JSON.stringify({ ids: proyectosSeleccionados }),
            contentType: "application/json",
            success: function(response) {
                $('#deleteModal').modal('hide'); // Oculta el modal de confirmación
                $('#successModal').modal('show'); // Muestra el modal de éxito
                setTimeout(function() {
                    $('#successModal').modal('hide'); // Oculta el modal de éxito después de un breve momento
                    location.reload(); // Recarga la página para actualizar los datos
                }, 1000);
            },
            error: function(xhr, status, error) {
                $('#deleteModal').modal('hide'); // Oculta el modal de confirmación
                $('#errorModal').modal('show'); // Muestra el modal de error
                $('#errorModalText').text('Error al eliminar los proyectos'); // Muestra mensaje de error
            }
        });
    });

    // Actualizar la visibilidad del botón de eliminar
    function updateDeleteButtonVisibility() {
        var checkedCount = $('.seleccionarProyecto:checked').length;
        $('#eliminarSeleccionButton').toggle(checkedCount > 0);
    }

    // Evento al cambiar cualquier checkbox de proyecto
    $('.seleccionarProyecto').on('change', function() {
        updateDeleteButtonVisibility();
    });

    // Evento para el checkbox "seleccionar todo"
    $('#seleccionarTodo').on('change', function() {
        var checked = $(this).prop('checked');
        $('.seleccionarProyecto').prop('checked', checked).trigger('change');
    });

    updateDeleteButtonVisibility(); // Llama inicialmente para establecer la visibilidad correcta
});


    </script>
{% endblock %}
