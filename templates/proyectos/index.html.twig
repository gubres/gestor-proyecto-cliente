{% extends 'base.html.twig' %}

{% block title %}Proyectos index{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    
     <link href="https://cdn.datatables.net/v/dt/jszip-3.10.1/dt-2.0.3/b-3.0.1/b-html5-3.0.1/b-print-3.0.1/sl-2.0.0/datatables.min.css" rel="stylesheet">
    <!-- Biblioteca para la fecha de creación -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.10.0/js/bootstrap-datepicker.min.js">
    <!-- Biblioteca de Jquery UI -->
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css"> <!-- Estilos para la ventana modal -->
  
{% endblock %}

{% block body %}
    <div class="container">
        <h1>Clientes</h1>
        <div class="row">
            <div class="col-md-6">
                <a href="{{ path('app_proyectos_new') }}" class="btn btn-primary">Crear Nuevo</a>
                <!-- Nuevo formulario para eliminar registros -->
                <form action="/eliminar-registros" method="post" id="formEliminarRegistros" style="display: inline-block;">
                    <!-- Campos ocultos para los IDs de los registros -->
                    <input type="hidden" name="id" id="idToDelete" value="">
                    
                    <!-- Botón para eliminar registros -->
                    <button type="submit" class="btn btn-danger" id="eliminarSeleccionButton" style="display: none;">Eliminar selección</button>
                </form>
            </div>
        </div>

    <div id="toolbar"></div> <!-- Contenedor para los botones -->

    <table class="table" id="proyectosTabla">
        <thead>
            <tr>
                <th><input type="checkbox" id="seleccionarTodo"></th>
                <th>Id</th>
                <th>Nombre</th>
                <th>Cliente</th>
                <th>Usuarios Asignados</th>
                <th>Estado</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            {% for proyecto in proyectos %}
            <tr>
                <td><input type="checkbox" class="seleccionarProyecto" name="proyectos_seleccionados[]" value="{{ proyecto.id }}"></td>
                <td>{{ proyecto.id }}</td>
                <td>{{ proyecto.nombre }}</td>
                <td>
                    {% if proyecto.cliente is null %}
                        Cliente eliminado
                    {% else %}
                        {{ proyecto.cliente.nombre }}
                    {% endif %}
                </td>
                <td>
                    {% for usuarioProyecto in proyecto.usuariosProyectos %}
                        {% if usuarioProyecto.estado %}
                            {{ usuarioProyecto.usuario.nombre }}
                            {% if not loop.last %}, {% endif %}
                        {% endif %}
                    {% endfor %}
                </td>
                <td>{{ proyecto.estado }}</td>
                <td>
                    <!-- Botón para abrir el modal de detalles -->
                    <button type="button" class="btn btn-info" data-bs-toggle="modal" data-bs-target="#detallesModal{{ proyecto.id }}">Detalles</button>
                    <a href="{{ path('app_proyectos_edit', {'id': proyecto.id}) }}" class="btn btn-warning">Editar</a>
                </td>
            </tr>
            {% else %}
            <tr>
                <td colspan="7">no records found</td>
            </tr>
            {% endfor %}
        </tbody>
    </table>
    </div>
    

    <!-- Divs para mostrar mensajes de éxito y error -->
    <div id="successMessage" class="alert alert-success d-none" role="alert"></div>
    <div id="errorMessage" class="alert alert-danger d-none" role="alert"></div>

    <!-- Modal de detalles -->
    {% for proyecto in proyectos %}
    <div class="modal fade" id="detallesModal{{ proyecto.id }}" tabindex="-1" aria-labelledby="detallesModalLabel{{ proyecto.id }}" aria-hidden="true">
        <div class="modal-dialog modal-lg"> <!-- modal-lg para hacer el modal más grande -->
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="detallesModalLabel{{ proyecto.id }}">Detalles del Proyecto</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <table class="modal-table">
                        <tbody>
                            <tr>
                                <th>Id</th>
                                <td>{{ proyecto.id }}</td>
                            </tr>
                            <tr>
                                <th>Nombre</th>
                                <td>{{ proyecto.nombre }}</td>
                            </tr>
                            <tr>
                                <th>Cliente</th>
                                <td>
                                {% if proyecto.cliente is null %}
                                    Cliente eliminado
                                {% else %}
                                    {{ proyecto.cliente.nombre }}
                                {% endif %}
                            </td>
                            </tr>
                            <tr>
                                <th>Usuarios Asignados</th>
                            <td>
                                {% for usuarioProyecto in proyecto.usuariosProyectos %}
                                    {% if usuarioProyecto.estado %}
                                        {{ usuarioProyecto.usuario.nombre }}
                                        {% if not loop.last %}, {% endif %}
                                    {% endif %}
                                {% endfor %}
                            </td>
                            </tr>
                            <tr>
                                <th>Estado</th>
                                <td>{{ proyecto.estado }}</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-arrow-left"></i>
                    </button>
                </div>
            </div>
        </div>
    </div>
    {% endfor %}
{% endblock %}

{% block javascripts %}
    {{ parent() }}
   
     <!-- JavaScript de jQuery y jQuery UI -->
   
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <!-- Estilos y scripts para DataTables con botones y selección múltiple -->
    <script src="https://cdn.datatables.net/v/dt/jszip-3.10.1/dt-2.0.3/b-3.0.1/b-html5-3.0.1/b-print-3.0.1/sl-2.0.0/datatables.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/vfs_fonts.js"></script>
    <!-- Agrega el script de DataTables Buttons -->
    
    <script src="https://cdn.datatables.net/buttons/2.0.0/js/buttons.colVis.min.js"></script>
   
    <script>
        $(document).ready(function() {
            var table = $('#proyectosTabla').DataTable({  
                dom: '<"toolbar">Bfrtip',
                buttons: [
                    {
                        extend: 'excel',
                        text: '<i class="fas fa-file-excel"></i>',
                        titleAttr: 'Exportar a Excel',
                        className: 'btn-excel'
                    },
                    {
                        extend: 'pdf',
                        text: '<i class="fas fa-file-pdf"></i>',
                        titleAttr: 'Exportar a PDF',
                        className: 'btn-pdf'
                    },
                    {
                        extend: 'print',
                        text: '<i class="fas fa-print"></i>',
                        titleAttr: 'Imprimir',
                        className: 'btn-print'
                    }
                ],
                select: {
                    style: 'multi',
                    selector: 'td:first-child'
                },
                order: [[1, 'asc']], // Ordena la tabla por la segunda columna
                initComplete: function () {
                    $('.dt-buttons').wrapAll('<div class="d-flex justify-content-end"></div>');
                }
            });


            // Agrega el botón de filtrar usando los botones de extensión
            new $.fn.dataTable.Buttons(table, {
                buttons: [
                    {
                        extend: 'colvis',
                        text: '<i class="fas fa-filter"></i> Filtrar', // Texto del botón
                        className: 'btn-filter',
                    }
                ]
            }).container().appendTo($('#toolbar'));

            // Inicializar los botones de extensión
            table.buttons().container().appendTo($('#toolbar'));

            // Agregar evento para mostrar el desplegable al hacer clic en el botón de filtrar
            $('#toolbar').on('click', '.btn-filter', function () {
                $(this).next().toggleClass('show');
            });

            // Agregar evento para mostrar la marca de verificación al seleccionar una columna
            $('#toolbar').on('change', 'input[type="checkbox"].dt-checkbox', function() {
                var index = $(this).val();
                var checked = $(this).prop('checked');
                table.column(index).visible(checked);
                updateCheckboxesVisibility(); // Llama a la función para actualizar la visibilidad de los checkboxes
            });

            // Función para actualizar la visibilidad de los checkboxes
            function updateCheckboxesVisibility() {
                $('#toolbar input[type="checkbox"].dt-checkbox').each(function() {
                    var column = table.column($(this).val());
                    $(this).prop('checked', column.visible()); // Marcar o desmarcar el checkbox según la visibilidad de la columna
                });
            }

            // Cerrar el desplegable al hacer clic fuera de él
            $(document).on('click', function (e) {
                if (!$(e.target).closest('.btn-filter').length) {
                    $('.show').removeClass('show');
                }
            });



            // Agregar un contenedor para los botones en la parte superior izquierda
            $("div.toolbar").html('<div class="btn-group" style="float:left;">' + 
               
                '<button type="button" class="btn btn-danger" id="eliminarSeleccionButton" style="display: none;">Eliminar Selección</button>' +
                '</div>');
            // Función para actualizar la visibilidad del botón de eliminar selección
            function updateDeleteButtonVisibility() {
                var deleteButton = $('#eliminarSeleccionButton');
                var checkedCount = $('.seleccionarProyecto:checked').length;
                if (checkedCount > 0) {
                    deleteButton.show(); // Mostrar el botón si hay alguna selección
                } else {
                    deleteButton.hide(); // Ocultar el botón si no hay ninguna selección
                }
            }

            $('#seleccionarTodo').on('click', function() {
                var isChecked = $(this).prop('checked');
                $('.seleccionarProyecto').prop('checked', isChecked);
                updateDeleteButtonVisibility(); // Llama a la función para actualizar la visibilidad del botón de eliminar selección
            });

            $('.seleccionarProyecto').on('click', function() {
                updateDeleteButtonVisibility(); // Llama a la función para actualizar la visibilidad del botón de eliminar selección
            });
            
            // Agregar evento click al botón para eliminar filas seleccionadas
            $('#eliminarSeleccionButton').on('click', function () {
                table.rows('.selected').remove().draw(false);
            });

            // Llamar a la función obtenerIDsSeleccionados en el evento submit del formulario
            $('#formEliminarRegistros').submit(function (event) {
                event.preventDefault(); // Evita el envío del formulario por defecto

                // Obtener los IDs seleccionados
                var idsSeleccionados = obtenerIDsSeleccionados();

                // Asignar los IDs al campo oculto 'idToDelete'
                $('#idToDelete').val(idsSeleccionados);

                // Realizar la solicitud AJAX
                $.ajax({
                    type: 'POST',
                    url: $(this).attr('action'),
                    data: $(this).serialize(),
                    success: function(response) {
                        if (response.trim() === 'Proyectos eliminados correctamente') {
                            $('#successMessage').removeClass('d-none').text(response);
                            
                            // Después de mostrar el mensaje de éxito, redirige a la página de índice de proyectos
                            window.location.href = "{{ path('app_proyectos_index') }}";
                        } else {
                            $('#errorMessage').removeClass('d-none').text('Ha ocurrido un error al eliminar los proyectos.');
                        }
                    },
                    error: function() {
                        $('#errorMessage').removeClass('d-none').text('Ha ocurrido un error al eliminar los proyectos.');
                    }
                });
            });

            // Definir la función obtenerIDsSeleccionados
            function obtenerIDsSeleccionados() {
                var ids = [];
                $('.seleccionarProyecto:checked').each(function() {
                    ids.push($(this).val());
                });
                return ids;
            }
        });
    </script>
{% endblock %}
