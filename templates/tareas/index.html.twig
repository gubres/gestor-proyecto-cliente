{% extends 'base.html.twig' %}

{% block title %}Tareas index{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link href="https://cdn.datatables.net/v/dt/jszip-3.10.1/dt-2.0.3/b-3.0.1/b-html5-3.0.1/b-print-3.0.1/sl-2.0.0/datatables.min.css" rel="stylesheet">
    <!-- Biblioteca para la fecha de creación -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.10.0/js/bootstrap-datepicker.min.js">
    <!-- Biblioteca de Jquery UI -->
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">

{% endblock %}

{% block body %}
   <div class="container">
        <h1>Tareas</h1>
        <div class="row">
            <div class="col-md-6">
                <a href="{{ path('app_tareas_new') }}" class="btn btn-primary">Crear Nuevo</a>
                <form action="{{ path('eliminar_tareas') }}" method="post" id="formEliminarTareas" style="display: inline-block;">
                    <!-- Botón para eliminar selección -->
                    <button type="button" class="btn btn-danger" id="eliminarSeleccionButton" style="display: none;">Eliminar selección</button>
                </form>
                </div>

        </div>

    <div id="toolbar"></div> <!-- Contenedor para los botones -->

    <table class="table table-bordered" id="tareasTabla">
        <thead>
            <tr>
                <th class="text-center"><input type="checkbox" id="seleccionarTodo"></th>
                <th class="text-center">Id</th>
                <th class="text-center">Nombre</th>
                <th class="text-center">Usuarios</th>
                <th class="text-center">Finalizada</th>
                <th class="text-center">Fecha creación</th>
                <th class="text-center">Prioridad</th>
                <th class="text-center">Acciones</th>
            </tr>
        </thead>
        <tbody class="text-center">
            {% for tarea in tareas %}
                <tr>
                    <td><input type="checkbox" class="seleccionarTarea" name="tareas_seleccionadas[]" value="{{ tarea.id }}"></td>
                    <td class="text-center">{{ tarea.id }}</td>
                    <td>{{ tarea.nombre }}</td>
                    <td>
                    {% for usuario in tarea.getUsuario() %}
                            {{ usuario.nombre }}
                            {% if not loop.last %}, {% endif %}
                        {% endfor %}
                    </td>
                    <td>{{ tarea.finalizada ? 'Yes' : 'No' }}</td>
                    <td>{{ tarea.creadoEn ? tarea.creadoEn|date('Y-m-d H:i:s') : '' }}</td>
                    <td>
                        {% set priorityColor = '' %}
                        {% if tarea.prioridad == 'ALTA' %}
                            {% set priorityColor = 'red' %}
                        {% elseif tarea.prioridad == 'MEDIA' %}
                            {% set priorityColor = 'orange' %}
                        {% elseif tarea.prioridad == 'BAJA' %}
                            {% set priorityColor = 'green' %}
                        {% endif %}
                        <strong style="color: {{ priorityColor }}; font-weight: bold;">{{ tarea.prioridad }}</strong>
                    </td>
                    <td>
                        <!-- Botón para abrir la ventana modal con los detalles de la tarea -->
                        <button type="button" class="btn btn-info abrirModal" data-toggle="modal" data-target="#detallesTarea{{ tarea.id }}">Detalles</button>

                        <a href="{{ path('app_tareas_edit', {'id': tarea.id}) }}" class="btn btn-warning ">Editar</a>
                    </td>
                </tr>
            {% else %}
                <tr>
                    <td colspan="6">no records found</td>
                </tr>
            {% endfor %}
        </tbody>
    </table>

    
     <!-- Divs para mostrar mensajes de éxito y error -->
    <div id="successMessage" class="alert alert-success d-none" role="alert"></div>
    <div id="errorMessage" class="alert alert-danger d-none" role="alert"></div>

    <!-- Divs para mostrar detalles de la tarea -->
    {% for tarea in tareas %}
        <div class="modal fade" id="detallesTarea{{ tarea.id }}" tabindex="-1" role="dialog" aria-labelledby="detallesTarea{{ tarea.id }}Label" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="detallesTarea{{ tarea.id }}Label">Detalles de la Tarea</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <table class="modal-table">
                            <tbody>
                                <tr>
                                    <th>Id</th>
                                    <td>{{ tarea.id }}</td>
                                </tr>
                                <tr>
                                    <th>Nombre</th>
                                    <td>{{ tarea.nombre }}</td>
                                </tr>
                                <tr>
                                    <th>Descripción</th>
                                    <td>{{ tarea.descripcion }}</td>
                                </tr>
                                <tr>
                                    <th>Finalizada</th>
                                    <td>{{ tarea.finalizada ? 'Yes' : 'No' }}</td>
                                </tr>
                                <tr>
                                    <th>Creado_en</th>
                                    <td>{{ tarea.creadoEn ? tarea.creadoEn|date('Y-m-d H:i:s') : '' }}</td>
                                </tr>
                                <tr>
                                    <th>Prioridad</th>
                                    <td>
                                        {% set priorityColor = '' %}
                                        {% if tarea.prioridad == 'ALTA' %}
                                            {% set priorityColor = 'red' %}
                                        {% elseif tarea.prioridad == 'MEDIA' %}
                                            {% set priorityColor = 'orange' %}
                                        {% elseif tarea.prioridad == 'BAJA' %}
                                            {% set priorityColor = 'green' %}
                                        {% endif %}
                                        <strong style="color: {{ priorityColor }}; font-weight: bold;">{{ tarea.prioridad }}</strong>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <div class="modal-footer">
                        <button type="button" onclick="window.history.back();" class="btn btn-secondary">
                            <i class="fas fa-arrow-left"></i> Volver
                        </button>
                    </div>
                </div>
            </div>
        </div>
    {% endfor %}


                {# modal de mensajes #}
        <div class="modal-body">
            {% include '/tareas/modalTareas.html.twig' %}
        </div>
{% endblock %}


{% block javascripts %}
    {{ parent() }}

  <!-- JavaScript de jQuery y jQuery UI -->
   
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <!-- Estilos y scripts para DataTables con botones y selección múltiple -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/vfs_fonts.js"></script>
    <!-- Agrega el script de DataTables Buttons -->
    
    <script src="https://cdn.datatables.net/buttons/2.0.0/js/buttons.colVis.min.js"></script>
   

    <script>
    $(document).ready(function() {
        // Verificar si hay datos en la tabla
        var tableData = {% if tareas is defined %} {{ tareas|length > 0 ? tareas|json_encode : 'null' }} {% else %} null {% endif %};
        
        // Si hay datos, inicializar la tabla DataTables
        if (tableData !== null) {
            var table = $('#tareasTabla').DataTable({  
                dom: '<"toolbar">Bfrtip',
                language: {
                    "decimal": "",
                    "emptyTable": "No hay información",
                    "info": "Mostrando _START_ a _END_ de _TOTAL_ Entradas",
                    "infoEmpty": "Mostrando 0 to 0 of 0 Entradas",
                    "infoFiltered": "(Filtrado de _MAX_ total entradas)",
                    "infoPostFix": "",
                    "thousands": ",",
                    "lengthMenu": "Mostrar _MENU_ Entradas",
                    "loadingRecords": "Cargando...",
                    "processing": "Procesando...",
                    "search": "Buscar:",
                    "zeroRecords": "Sin resultados encontrados",
                }, 
                buttons: [
                    {
                        extend: 'excel',
                        text: '<i class="fas fa-file-excel"></i>',
                        titleAttr: 'Exportar a Excel',
                        className: 'btn-excel',
                        exportOptions: {
                            columns: [1, 2, 3, 4, 5]
                        },
                    },
                    {
                        extend: 'pdf',
                        text: '<i class="fas fa-file-pdf"></i>',
                        titleAttr: 'Exportar a PDF',
                        className: 'btn-pdf',
                        exportOptions: {
                            columns: [1, 2, 3, 4, 5]
                        },
                        customize: function(doc) {
                            // Centrar la tabla en la página PDF
                            var docContent = doc.content[1];
                            docContent.margin = [ 0, 0, 0, 0 ]; // [left, top, right, bottom]
                            docContent.table.widths = Array(docContent.table.body[0].length + 1).join('*').split('');
                            // En ese apartado se puede ajustar para cambiar la posición de la tabla horizontalmente
                            docContent.layout = {
                                hLineWidth: function(i, node) {
                                    return 0.5;
                                },
                                vLineWidth: function(i, node) {
                                    return 0.5;
                                },
                                hLineColor: function(i, node) {
                                    return '#aaa';
                                },
                                vLineColor: function(i, node) {
                                    return '#aaa';
                                },
                                paddingLeft: function(i, node) {
                                    return 4;
                                },
                                paddingRight: function(i, node) {
                                    return 4;
                                },
                                paddingTop: function(i, node) {
                                    return 2;
                                },
                                paddingBottom: function(i, node) {
                                    return 2;
                                }
                            };
                        }
                    },
                    {
                        extend: 'print',
                        text: '<i class="fas fa-print"></i>',
                        titleAttr: 'Imprimir',
                        className: 'btn-print',
                        exportOptions: {
                            columns: [1, 2, 3, 4, 5]
                        },
                    }
                ],
                select: {
                    style: 'multi',
                    selector: 'td:first-child'
                },
                order: [[1, 'asc']], // Ordena la tabla por la segunda columna
                initComplete: function () {
                    $('.dt-buttons').wrapAll('<div class="d-flex justify-content-end"></div>');
                }
            });
        } else {
            // Si no hay datos, mostrar un mensaje indicando que no hay información
            $('#tareasTabla').html('<tr><td colspan="6">No hay información disponible</td></tr>');
        }

            // Agrega el botón de filtrar usando los botones de extensión
            new $.fn.dataTable.Buttons(table, {
                buttons: [
                    {
                        extend: 'colvis',
                        text: '<i class="fas fa-filter"></i> Filtrar', // Texto del botón
                        className: 'btn-filter',
                    }
                ]
            }).container().appendTo($('#toolbar'));

            // Inicializar los botones de extensión
            table.buttons().container().appendTo($('#toolbar'));

            // Agregar evento para mostrar el desplegable al hacer clic en el botón de filtrar
            $('#toolbar').on('click', '.btn-filter', function () {
                $(this).next().toggleClass('show');
            });

            // Script para limpiar la selección de tareas
            $('#limpiarFiltros').on('click', function () {
                $('#filtroFinalizada').val('');
                $('#filtroPrioridad').val('');
                $('#filtroFecha').val('');
                $('#tareasTabla').DataTable().search('').draw();
            });

            // Script para la fecha de creación
            $('#datepicker').datepicker({
                format: 'yyyy-mm-dd',
                autoclose: true,
                endDate: '+0d'
            });

            // Botón de buscar por fecha de creación
            $('#buscarFecha').on('click', function () {
                var fecha = $('#datepicker').val();
                $('#filtroFecha').val(fecha);
                $('#tareasTabla').DataTable().search(fecha).draw();
            });

            // Script para filtrar por finalizada
            $('#filtroFinalizada').on('change', function () {
                var finalizada = $(this).val();
                $('#tareasTabla').DataTable().column(4).search(finalizada).draw();
            });

            // Script para filtrar por prioridad
            $('#filtroPrioridad').on('change', function () {
                var prioridad = $(this).val();
                $('#tareasTabla').DataTable().column(6).search(prioridad).draw();
            });

            // Botón para eliminar las tareas seleccionadas
            $('#eliminarSeleccionButton').on('click', function () {
                var form = $('#formEliminarTareas');
                form.submit();
            });

            // Controla el estado del botón de eliminación de selección
            $('.seleccionarTarea').on('change', function () {
                var anySelected = $('.seleccionarTarea:checked').length > 0;
                if (anySelected) {
                    $('#eliminarSeleccionButton').show();
                } else {
                    $('#eliminarSeleccionButton').hide();
                }
            });

            // Mostrar ventana modal al hacer clic en el botón de detalles
            $('.abrirModal').on('click', function() {
                var modalId = $(this).data('target');
                $(modalId).modal('show');
            });

         // Evento para abrir el modal de confirmación de eliminación
    $('#eliminarSeleccionButton').on('click', function() {
        
        var selectedTasks = $('.seleccionarTarea:checked').map(function() {
            return $(this).val();
        }).get();

        if (selectedTasks.length > 0) {
            $('#deleteModal').modal('show');
            $('#confirmDeleteButton').off('click').on('click', function() {
                eliminarTareas(selectedTasks, table);
            });
        } else {
            alert('No se ha seleccionado ninguna tarea para eliminar.');
        }
    });
});

function eliminarTareas(tareasSeleccionadas, table) {
    fetch('{{ path("eliminar_tareas") }}', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'Accept': 'application/json'
        },
        body: JSON.stringify({ ids: tareasSeleccionadas })
    })
    .then(response => {
        if (!response.ok) {
            throw new Error('Error en la solicitud');
        }
        return response.json();
    })
    .then(data => {
        $('#deleteModal').modal('hide');
        $('#successModal').modal('show');
        setTimeout(() => {
            $('#successModal').modal('hide');
           location.reload(); // Recarga el DataTable sin resetear la paginación
        }, 2000);
    })
    .catch(error => {
        $('#deleteModal').modal('hide');
        $('#errorModalText').text(error.message || 'Error al eliminar las tareas. Por favor, intente de nuevo.');
        $('#errorModal').modal('show');
    });
}


    // Actualización del estado de visibilidad del botón de eliminar
    $('.seleccionarTarea').on('change', function() {
        var selectedCount = $('.seleccionarTarea:checked').length;
        $('#eliminarSeleccionButton').toggle(selectedCount > 0);
    });

    // Selección/deselección de todas las tareas
    $('#seleccionarTodo').on('change', function() {
        var isChecked = $(this).is(':checked');
        $('.seleccionarTarea').prop('checked', isChecked).trigger('change');
    });

    </script>
{% endblock %}
